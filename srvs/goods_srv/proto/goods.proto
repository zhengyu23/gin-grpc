syntax = "proto3";
import "google/protobuf/empty.proto";
option go_package = ".;proto";

// service 服务接口
//    rpc 函数名(message) returns(message)

// message 消息体

service Goods{
  // 商品接口 todo 下面CreateGoodsInfo名字可修改为GoodsInfo, DeleteGoodsInfo可与GoodInfoRequest合并
  rpc GoodsList(GoodsFilterRequest) returns(GoodsListResponse); // 获取商品列表,通过商品筛选信息
  rpc BatchGetGoods(BatchGoodsIdInfo) returns(GoodsListResponse); // 获取指定商品列表,通过批量商品的ID(应用于查询用户订单下的所有商品)
  rpc GetGoodsDetail(GoodInfoRequest) returns(GoodsInfoResponse); // 获取商品详情,通过商品信息(ID)
  rpc CreateGoods(CreateGoodsInfo) returns (GoodsInfoResponse); // 新增商品,通过商品信息
  rpc DeleteGoods(DeleteGoodsInfo) returns (google.protobuf.Empty); // 删除商品,通过商品信息(ID)
  rpc UpdateGoods(CreateGoodsInfo) returns (google.protobuf.Empty); // 修改商品,通过商品信息

  // 商品分类接口
  rpc GetAllCategorysList(google.protobuf.Empty) returns(CategoryListResponse); // 获取所有分类列表
  rpc GetSubCategory(CategoryListRequest) returns(SubCategoryListResponse); // 获取分类的子分类列表,通过分类ID和分类层级高度
  rpc CreateCategory(CategoryInfoRequest) returns(CategoryInfoResponse); // 新增分类,通过分类信息
  rpc DeleteCategory(DeleteCategoryRequest) returns(google.protobuf.Empty); // 删除分类,通过分类信息(ID)
  rpc UpdateCategory(CategoryInfoRequest) returns(google.protobuf.Empty); // 修改分类,通过分类信息

  // 商品品牌接口
  rpc BrandList(BrandFilterRequest) returns(BrandListResponse); // 获取品牌列表,通过分页
  rpc CreateBrand(BrandRequest) returns(BrandInfoResponse); // 新建品牌,通过品牌信息
  rpc DeleteBrand(BrandRequest) returns(google.protobuf.Empty); // 删除品牌,通过品牌信息(ID)
  rpc UpdateBrand(BrandRequest) returns(google.protobuf.Empty); // 修改品牌,通过品牌信息

  // 轮播图接口
  rpc BannerList(google.protobuf.Empty) returns(BannerListResponse); //获取轮播列表(无需分页)
  rpc CreateBanner(BannerRequest) returns(BannerResponse); // 新增轮播图,通过轮播图信息
  rpc DeleteBanner(BannerRequest) returns(google.protobuf.Empty); // 删除轮播图,通过轮播图信息
  rpc UpdateBanner(BannerRequest) returns(google.protobuf.Empty); // 修改轮播图,通过轮播图信息

  // 品牌分类聚合信息接口
  rpc CategoryBrandList(CategoryBrandFilterRequest) returns(CategoryBrandListResponse); //获取分类品牌聚合列表,通过分页
  rpc GetCategoryBrandList(CategoryInfoRequest) returns(BrandListResponse); //获取品牌列表,通过分类信息
  rpc CreateCategoryBrand(CategoryBrandRequest) returns(CategoryBrandResponse); //新增分类品牌聚合信息,通过分类ID和品牌ID
  rpc DeleteCategoryBrand(CategoryBrandRequest) returns(google.protobuf.Empty); //删除分类品牌聚合信息,通过分类ID和品牌ID
  rpc UpdateCategoryBrand(CategoryBrandRequest) returns(google.protobuf.Empty); //修改分类品牌聚合信息,通过分类ID和品牌ID
}

message CategoryListRequest {
  int32 id    = 1;
  int32 level = 2;
}

message CategoryInfoRequest {
  int32  id             = 1;
  string name           = 2;
  int32  parentCategory = 3;
  int32  level          = 4;
  bool   isTab          = 5;
}

message DeleteCategoryRequest {
  int32 id = 1;
}

message QueryCategoryRequest {
  int32  id   = 1;
  string name = 2;
}

message CategoryInfoResponse {
  int32  id             = 1;
  string name           = 2;
  int32  parentCategory = 3;
  int32  level          = 4;
  bool   isTab          = 5;
}

message CategoryListResponse {
  int32                         total    = 1;
  repeated CategoryInfoResponse data     = 2;
  string                        jsonData = 3;
}

message SubCategoryListResponse {
  int32                         total        = 1;
  CategoryInfoResponse          info         = 2;
  repeated CategoryInfoResponse subCategorys = 3;
}

message CategoryBrandFilterRequest  {
  int32 pages       = 1;
  int32 pagePerNums = 2;
}

message FilterRequest  {
  int32 pages       = 1;
  int32 pagePerNums = 2;
}

message CategoryBrandRequest{
  int32 id         = 1;
  int32 categoryId = 2;
  int32 brandId    = 3;
}
message CategoryBrandResponse{
  int32                id       = 1;
  BrandInfoResponse    brand    = 2;
  CategoryInfoResponse category = 3;
}

message BannerRequest {
  int32  id    = 1;
  int32  index = 2;
  string image = 3;
  string url   = 4;
}

message BannerResponse {
  int32  id    = 1;
  int32  index = 2;
  string image = 3;
  string url   = 4;
}

message BrandFilterRequest {
  int32 pages       = 1;
  int32 pagePerNums = 2;
}

message BrandRequest {
  int32  id   = 1;
  string name = 2;
  string logo = 3;
}

message BrandInfoResponse {
  int32  id   = 1;
  string name = 2;
  string logo = 3;
}

message BrandListResponse {
  int32                      total = 1;
  repeated BrandInfoResponse data  = 2;
}

message BannerListResponse {
  int32                   total = 1;
  repeated BannerResponse data  = 2;
}

message CategoryBrandListResponse {
  int32                          total = 1;
  repeated CategoryBrandResponse data  = 2;
}



message BatchGoodsIdInfo {
  repeated int32 id = 1;
}


message DeleteGoodsInfo {
  int32 id = 1;
}

message CategoryBriefInfoResponse {
  int32  id   = 1;
  string name = 2;
}

message CategoryFilterRequest {
  int32 id    = 1;
  bool  isTab = 2;
}

message GoodInfoRequest {
  int32 id = 1;
}

message CreateGoodsInfo {
  int32           id              = 1;
  string          name            = 2;
  string          goodsSn         = 3;
  int32           stocks          = 7; //库存，
  float           marketPrice     = 8;
  float           shopPrice       = 9;
  string          goodsBrief      = 10;
  string          goodsDesc       = 11;
  bool            shipFree        = 12;
  repeated string images          = 13;
  repeated string descImages      = 14;
  string          goodsFrontImage = 15;
  bool            isNew           = 16;
  bool            isHot           = 17;
  bool            onSale          = 18;
  int32           categoryId      = 19;
  int32           brandId         = 20;
}

message GoodsReduceRequest {
  int32 GoodsId = 1;
  int32 nums    = 2;
}

message BatchCategoryInfoRequest {
  repeated int32 id        = 1;
  int32          goodsNums = 2;
  int32          brandNums = 3;
}

message GoodsFilterRequest  {
  int32  priceMin    = 1;
  int32  priceMax    = 2;
  bool   isHot       = 3;
  bool   isNew       = 4;
  bool   isTab       = 5;
  int32  topCategory = 6;
  int32  pages       = 7;
  int32  pagePerNums = 8;
  string keyWords    = 9;
  int32  brand       = 10;
}


message GoodsInfoResponse {
  int32                     id              = 1;
  int32                     categoryId      = 2;
  string                    name            = 3;
  string                    goodsSn         = 4;
  int32                     clickNum        = 5;
  int32                     soldNum         = 6;
  int32                     favNum          = 7;
  float                     marketPrice     = 9;
  float                     shopPrice       = 10;
  string                    goodsBrief      = 11;
  string                    goodsDesc       = 12;
  bool                      shipFree        = 13;
  repeated string           images          = 14;
  repeated string           descImages      = 15;
  string                    goodsFrontImage = 16;
  bool                      isNew           = 17;
  bool                      isHot           = 18;
  bool                      onSale          = 19;
  int64                     addTime         = 20;
  CategoryBriefInfoResponse category        = 21;
  BrandInfoResponse         brand           = 22;
}

message GoodsListResponse {
  int32                      total = 1;
  repeated GoodsInfoResponse data  = 2;
}
